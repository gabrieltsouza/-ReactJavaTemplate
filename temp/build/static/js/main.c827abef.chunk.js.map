{"version":3,"sources":["logo.svg","component/menuapp/MenuApp.jsx","component/about/About.js","component/notfound404/notFound404.js","component/header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MenuApp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleDrawer","open","event","console","log","type","key","state","SubMenuControl","setState","MainMenu","MainMenuName","item","prevState","defineProperty","children","_this2","classes","map","subOption","react_default","a","createElement","name","ListItem","onClick","handleClick","onKeyDown","button","ListItemIcon","VerticalSplit_default","ListItemText","inset","primary","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","handler","react_router_dom","to","url","className","links","Divider","list","Fragment","IconButton","color","aria-label","SwipeableDrawer","anchor","onClose","onOpen","paper","role","List","divider","disableGutters","menuHeader","menuItems","data","Component","withStyles","width","fullList","textDecoration","paddingLeft","About","src","logo","alt","notFound404","withRouter","s","title","location","pathname","substring","length","charAt","toUpperCase","slice","App","header_Header","id","class","menuapp_MenuApp","path","exact","component","menuOption","Boolean","window","hostname","match","ReactDOM","render","react","fallback","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c827abef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport IconButton from '@material-ui/core/IconButton';\nimport VerticalSplitIcon from '@material-ui/icons/VerticalSplit';\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport Divider from '@material-ui/core/Divider';\n\nimport Collapse from '@material-ui/core/Collapse'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\n\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\n\nimport { Link } from 'react-router-dom'\nimport menuItems from './menuAppSource.json'\n\n\nconst styles = {\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  links: {\n    textDecoration:'none'\n  },\n  menuHeader: {\n    paddingLeft: '30px'\n  }\n};\n\nclass MenuApp extends Component {\n  constructor( props ) {\n    super( props )\n    this.state = {MainMenu:false,MainMenuName:\"menu_left\",SubMenuControl:true}\n  }\n\n  // This methods will controle when menu shows or not\ntoggleDrawer = (open) => (event) => {\n  console.log(\"toggleDrawer 0\" + open + event.type + event.key);\n  if ((event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) || (!this.state.SubMenuControl)) {\n    this.setState({SubMenuControl:true})\n    console.log(\"toggleDrawer 1\");\n    return;\n  }\n  console.log(\"toggleDrawer 2\");\n  console.log(\"toggleDrawer 3 \" + this.state.MainMenu);\n  this.setState({MainMenu:open})\n  console.log(\"toggleDrawer 4 \" + this.state.MainMenu);\n}\n// this method sets the current state of a menu item i.e whether it is in expanded or collapsed or a collapsed state\nhandleClick( item ) {\n    this.toggleDrawer(true)\n    this.setState( prevState => ( \n      { [ item ]: !prevState[ item ] } \n    ) )\n  }\n// if the menu item doesn't have any child, this method simply returns a clickable menu item that redirects to any location and if there is no child this method uses recursion to go until the last level of children and then returns the item by the first condition.\nhandler( children ) {\n    const { classes } = this.props\n    const { state } = this\nreturn children.map( ( subOption ) => {\n      if ( !subOption.children ) {\n        return (\n          <div key={ subOption.name }\n          onClick={this.toggleDrawer(false)}\n          onKeyDown={this.toggleDrawer(false)}\n          >\n            <ListItem \n              button \n              key={ subOption.name }>\n              <Link \n                to={ subOption.url }\n                className={ classes.links }>\n                <ListItemIcon><VerticalSplitIcon/></ListItemIcon>\n                <ListItemText \n                  inset\n                  primary={ subOption.name } \n                />\n              </Link>\n            </ListItem>\n            <Divider />\n          </div>\n        )\n      }\n      return (\n        <div key={ subOption.name }\n        >\n          <ListItem \n            onClick={ () => this.handleClick( subOption.name )}\n            onKeyDown={this.toggleDrawer(true)}\n            button \n            >\n            <ListItemIcon><VerticalSplitIcon/></ListItemIcon>\n            <ListItemText \n              inset \n              primary={ subOption.name } />\n            { state[ subOption.name ] ? \n              <ExpandLess /> :\n              <ExpandMore />\n            }\n          </ListItem>\n          <Collapse \n            in={ state[ subOption.name ] } \n            timeout=\"auto\" \n            unmountOnExit\n          >\n            { this.handler( subOption.children ) }\n          </Collapse>\n        </div>\n      )\n    } )\n  }\nrender() {\n    const { classes } = this.props\n    return (\n      <div className={classes.list}>\n        <React.Fragment key={this.state.MainMenuName}>\n        <IconButton onClick={this.toggleDrawer(true)} color=\"primary\" aria-label=\"Open Menu\">\n          <VerticalSplitIcon/>\n        </IconButton>\n          <SwipeableDrawer\n            anchor=\"left\"\n            open={this.state.MainMenu}\n            onClose={this.toggleDrawer(false)}\n            onOpen={this.toggleDrawer(true)}\n            classes={ { paper: classes.list } }>\n          <div\n              role=\"presentation\"\n              //onClick={this.toggleDrawer(false)}\n              //onKeyDown={this.toggleDrawer(false)}\n              >\n            <List>\n              <ListItem \n                key=\"menuHeading\"\n                divider\n                disableGutters\n                onClick={this.toggleDrawer(false)}\n                onKeyDown={this.toggleDrawer(false)}\n                >\n                  <ListItemText\n                    className={ classes.menuHeader }\n                    inset\n                    primary=\"Menu\"\n                  />\n              </ListItem>\n            { this.handler( menuItems.data ) }\n            </List>\n          </div>\n        </SwipeableDrawer>\n        </React.Fragment>\n      </div>\n    )\n  }\n}\nexport default withStyles(styles)(MenuApp)\n","import React, { Component } from 'react';\r\nimport logo from '../../logo.svg';\r\nimport \"../../App.css\";\r\n\r\nclass About extends Component {\r\n render() {\r\n return (\r\n    <div className='App'>\r\n       <header className='App-header'>\r\n          <img src={logo} className='App-logo' alt='logo' />\r\n          <h1 className='App-title'>Página de Sobre</h1>\r\n       </header>\r\n       <p className='App-intro'>\r\n            Exemplo de Página Sobre :)\r\n       </p>\r\n    </div>\r\n );\r\n }\r\n}\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport logo from '../../logo.svg';\r\nimport \"../../App.css\";\r\n\r\nclass notFound404 extends Component {\r\n render() {\r\n return (\r\n    <div className='App'>\r\n       <header className='App-header'>\r\n          <img src={logo} className='App-logo' alt='logo' />\r\n          <h1 className='App-title'>Página não encontrada</h1>\r\n       </header>\r\n       <p className='App-intro'>\r\n            Página não encontrada :( :/\r\n       </p>\r\n    </div>\r\n );\r\n }\r\n}\r\nexport default notFound404;\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n    const capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n    const title = capitalize(props.location.pathname.substring(1,props.location.pathname.length))\r\n    return(\r\n        <nav className=\"navbar navbar-dark bg-primary\">\r\n            <div className=\"row col-12 d-flex justify-content-center text-white\">\r\n                <span className=\"h3\">{props.title || title}</span>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default withRouter(Header);","import React, { Component, lazy } from 'react';\nimport './App.css';\n\n/*\nimport MenuApp from './component/menuapp/MenuAppSwipable';\n*/\nimport MenuApp from './component/menuapp/MenuApp';\n\nimport { Switch, Route } from 'react-router-dom'\n\n/* Loading components begining*/\nimport menuItems from './component/menuapp/menuAppSource.json'\nimport About from './component/about/About';\nimport notFound404 from './component/notfound404/notFound404';\nimport Header from './component/header/Header';\n/* Loading components finished*/\n\n/*\nto check in the future about dinamic imports (quem sabe né)\nvar x = \"xAbout\";\nvar y = \"./About\";\nconst w = \"/about\";\nconst menu1 = lazy(() => import(y));\nconst menu1 = lazy(() => import(\"./About\"));\n*/\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n\n        <Header />\n        \n        <div id=\"root_header\" class=\"flex-container-header\">\n          <div id=\"root_header_1\" id=\"MenuApp\">\n            <MenuApp />\n          </div>\n          <div id=\"root_header_2\">\n          </div>\n          <div id=\"root_header_3\">\n          </div>\n          <div id=\"root_header_4\">\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/\" exact={true} component={About} />\n            <Route path=\"/about\" component={About} />\n            <Route path='*' component={notFound404} />\n\n            { menuItems.data.map( ( menuOption ) => {\n              return '<! --' + menuOption.name + '--> ' \n            } ) }\n\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {  Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render((\n    <BrowserRouter>\n    <Suspense fallback={<div>Loading (Suspense component) ...</div>}>\n        <App />\n    </Suspense>\n    </BrowserRouter> \n), document.getElementById('root_main'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}